<script type="text/javascript" src="https://js.squareup.com/v2/paymentform"></script>.sq-input {
    border: 1px solid .black;
    display: inline-block;
}<form id="nonce-form" novalidate action="PATH/TO/PAYMENT/PROCESSING/PAGE" method="post">
      <fieldset>
        <span class="label">Card Number</span>
        <div id="sq-card-number"></div>

        <div class="third">
          <span class="label">Expiration</span>
          <div id="sq-expiration-date"></div>
        </div>

        <div class="third">
          <span class="label">CVV</span>
          <div id="sq-cvv"></div>
        </div>

        <div class="third">
          <span class="label">Postal</span>
          <div id="sq-postal-code"></div>
        </div>
      </fieldset>

      <button id="sq-creditcard" class="button-credit-card" onclick="requestCardNonce(event)">Pay $6.00</button>

      <div id="error"></div>

      <!--
        After a nonce is generated it will be assigned to this hidden input field.
      -->
      <input type="hidden" id="card-nonce" name="nonce">
    </form>var paymentForm = new SqPaymentForm({
 applicationId: applicationId,
 inputClass: 'sq-input',
 cardNumber: {
   elementId: 'sq-card-number',
   placeholder: '•••• •••• •••• ••••'
 },
 cvv: {
   elementId: 'sq-cvv',
   placeholder: 'CVV'
 },
 expirationDate: {
   elementId: 'sq-expiration-date',
   placeholder: 'MM/YY'
 },
 postalCode: {
   elementId: 'sq-postal-code'
 },
 callbacks: {
   cardNonceResponseReceived: function (errors, nonce, cardData) {
     $('card-nonce').value = nonce;
     $('nonce-form').submit();
   }
  }
});
function requestCardNonce(event) {
 event.preventDefault();
 paymentForm.requestCardNonce();
}
paymentForm.build()
\SquareConnect\Configuration::getDefaultConfiguration()->setAccessToken($access_token);
$transactions_api = new \SquareConnect\Api\TransactionsApi();$request_body = array (
  "card_nonce" => $nonce,
  "amount_money" => array (
    "amount" => 600,
    "currency" => "USD"
  ),
  "idempotency_key" => uniqid()
);$result = $transactions_api->charge($location_id, $request_body);//Get API client
$ApiConfig = new \SquareConnect\Configuration();
$ApiConfig->setAccessToken(MY_ACCESS_TOKEN);
$ApiClient = new \SquareConnect\ApiClient($ApiConfig);
$checkoutAPI = new SquareConnect\Api\CheckoutApi($ApiClient);//Set the item price
$price = new \SquareConnect\Model\Money;
$price->setAmount(600);
$price->setCurrency('USD');

//Create an item
$book = new \SquareConnect\Model\CreateOrderRequestLineItem();
$book->setName('The Shining');
$book->setQuantity('2');
$book->setBasePriceMoney($price);

//Add the item to the order
$lineItems = array();
array_push($lineItems, $book);

//Create the order
$order = new \SquareConnect\Model\CreateOrderRequest();
$order->setIdempotencyKey(uniqid());
$order->setLineItems($lineItems);
$checkout = new \SquareConnect\Model\CreateCheckoutRequest();
$checkout->setIdempotencyKey(uniqid());
$checkout->setOrder($order);$result = $checkoutClient->createCheckout($locationId,$checkout);
$checkoutId = $result->getCheckout()->getId();window.location.href  = $result->getCheckout()->getCheckoutPageUrl();
